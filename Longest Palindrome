
class GFG{
	public static void main (String[] args) {
		//code
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		sc.nextLine();
		for(int k=0;k<t;k++)
		{
		    String s=sc.nextLine();
		    int n=s.length();
		    int d[][]=new int[n][n];
		    for(int i=0;i<n;i++)
		    d[i][i]=1;
		    int x=0,y=0;
		    int lmax=1;
		    for(int k1=2;k1<=n;k1++)
		    {
		        for(int i=0;i<=n-k1;i++)
		        {
		            int j=i+k1-1;
		            if(s.charAt(i)==s.charAt(j) && k1==2)
		            {
		            d[i][j]=2;
		            if(lmax<d[i][j])
		            {
		               x=i;
		               y=j;
		               lmax=d[i][j];
		            }
		            }
		            else if(s.charAt(i)==s.charAt(j) && d[i+1][j-1]>(j-1)-(i+1))
		            {
		              d[i][j]=d[i+1][j-1]+2;
		            if(lmax<d[i][j])
		            {
		               x=i;
		               y=j;
		               lmax=d[i][j];
		            }
		            }
		            else
		            d[i][j]=Math.max(d[i+1][j],d[i][j-1]);
		        }
		    }
		    System.out.println(s.substring(x,y+1));
		}
	}
}


LINK : https://practice.geeksforgeeks.org/problems/longest-palindrome-in-a-string3411/1
REFERENCE : https://www.youtube.com/watch?v=UflHuQj6MVA
